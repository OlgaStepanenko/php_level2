<?php

class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A();
$b1 = new B();
$a1->foo(); //выведет 1, так как $a1 обращается к функции foo, а в ней значение x = 1(так как ++$x сначала увеличивает значение на 1, затем выводит) 
$b1->foo(); //так как класс В - потомок класса А, то данные наследуются. А поскольку там хранится число 1 , то и выводиться будет еденица
$a1->foo(); //выведет 2. Так как переменная х статическая, то при вызове функции повторно предыдущее значение сохранилось и присваивание $x = 0 больше не происходит. Вместо присваивания переменная получает сохраненнон ранее значение. И значение увеличивается еще на 1
$b1->foo(); //так как класс В - потомок класса А, то данные наследуются. В данный момент, после выполнения $a1->foo() х=2, соответственно и у потомка результатом будет число 2.
?>